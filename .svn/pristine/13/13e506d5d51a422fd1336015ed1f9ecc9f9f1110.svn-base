//
//  MSAEducationViewController.m
//  MySchapp
//
//  Created by CK-Dev on 06/04/16.
//  Copyright Â© 2016 ACA. All rights reserved.
//

#import "MSAEducationViewController.h"
#import "MSAEducationTableViewCell.h"
#import "MSAUtils.h"
#import "MSAConstants.h"
#import "MSAProtocols.h"
@interface MSAEducationViewController ()<UITableViewDataSource,UITableViewDelegate,DeleteEducationFromListDelegate>
{
    __weak IBOutlet UITextField *qualificationTxt;
    __weak IBOutlet UITextField *yearOfPassingTxt;
    __weak IBOutlet UITableView *educationList;
    NSMutableArray *localEducationList;
}
- (IBAction)addEducationClicked:(id)sender;

@end

@implementation MSAEducationViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    self.navigationController.navigationBarHidden = NO;
    self.navigationItem.title = @"Education";
    
    if (self.savedEducationArray) {
        localEducationList = [NSMutableArray arrayWithArray:self.savedEducationArray];
    }
    else {
        localEducationList = [[NSMutableArray alloc]init];
    }
    
    UIBarButtonItem *doneButton = [[UIBarButtonItem alloc]initWithBarButtonSystemItem:UIBarButtonSystemItemDone target:self action:@selector(saveSelectedEducations)];
    self.navigationItem.rightBarButtonItem = doneButton;
    
    UIBarButtonItem *cancelButton = [[UIBarButtonItem alloc]initWithBarButtonSystemItem:UIBarButtonSystemItemCancel target:self action:@selector(cancelSelectedEducations)];
    self.navigationItem.leftBarButtonItem = cancelButton;

}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark TableView Delegates
-(CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    return 60;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return localEducationList.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    static NSString *CellIdentifier = @"MSAEducationTableViewCell";
    
    MSAEducationTableViewCell *cell = (MSAEducationTableViewCell*)[tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {
        cell = (MSAEducationTableViewCell *) [[[NSBundle mainBundle] loadNibNamed:@"MSAEducationTableViewCell" owner:self options:nil] objectAtIndex:0];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
    }
    cell.qualificationLabel.text = [localEducationList objectAtIndex:indexPath.row];
    cell.delegate = self;
    return cell;
}

- (void)touchesBegan:(NSSet *)touches withEvent:(UIEvent *)event {
    for (UIView * txt in self.view.subviews){
        if ([txt isKindOfClass:[UITextField class]] && [txt isFirstResponder]) {
            [txt resignFirstResponder];
        }
    }
}

#pragma mark - Add Action Method
- (IBAction)addEducationClicked:(id)sender {
    
    if (![qualificationTxt.text isEqualToString:@""] && ![yearOfPassingTxt.text isEqualToString:@""]) {
        [localEducationList addObject:[NSString stringWithFormat:@"%@ - %@",qualificationTxt.text,yearOfPassingTxt.text]];
        [educationList reloadData];
        qualificationTxt.text = @"";
        yearOfPassingTxt.text = @"";
        [qualificationTxt resignFirstResponder];
        [yearOfPassingTxt resignFirstResponder];
    }
    else {
        [MSAUtils showAlertWithTitle:@"Warning !" message:@"Fields can't be empty" cancelButton:kAlertOkButtonTitle otherButton:nil delegate:self];
    }
    
    
}

#pragma - Selector Methods
-(void)saveSelectedEducations {
    
    [self.delegate educationDoneClickedWithValues:localEducationList];
    [self.navigationController popViewControllerAnimated:YES];
    
}

-(void)cancelSelectedEducations {
    [self.navigationController popViewControllerAnimated:YES];
}

#pragma mark - DeleteEducation Delegate Method
-(void)deleteEducation:(id)cell {
    [localEducationList removeObject:[cell qualificationLabel].text];
    [educationList reloadData];
}




@end
