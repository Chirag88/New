//
//  MSACountrySelectViewController.m
//  MySchapp
//
//  Created by CK-Dev on 10/03/16.
//  Copyright Â© 2016 ACA. All rights reserved.
//

#import "MSACountrySelectViewController.h"
#import "MSAPlanViewContoller.h"
#import "MSAConstants.h"
#import "MSANetworkHandler.h"

@interface MSACountrySelectViewController()<MSANetworkDelegate>
{
    NSUserDefaults *userDefaults;
}
@end
@implementation MSACountrySelectViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view, typically from a nib.
    
    userDefaults = [NSUserDefaults standardUserDefaults];
    NSLog(@"%@", [userDefaults valueForKey:kDefaultsAccessTokenType]);
    NSLog(@"%@", [userDefaults valueForKey:kDefaultsRefreshToken]);
    NSLog(@"%@", [userDefaults valueForKey:kDefaultsAccessToken]);
    NSLog(@"%@", [userDefaults valueForKey:kDefaultsAccessTokenExpiresIn]);
    NSLog(@"%@", [userDefaults valueForKey:kDefaultsRefreshTokenExpiresIn]);
    NSLog(@"%@", [userDefaults valueForKey:kDefaultsAccessTokenReceivedTime]);
    NSLog(@"%@", [userDefaults valueForKey:kDefaultsRefreshTokenReceivedTime]);
}

-(BOOL)isValidRefreshToken {
    NSNumber *expireTimeInterval = [userDefaults valueForKey:kDefaultsRefreshTokenExpiresIn];
    NSDate *refeshTokenReceiveTime = [userDefaults valueForKey:kDefaultsRefreshTokenReceivedTime];
    
    NSDate *currentDateTime = [NSDate date];
    NSDate *newDate = [refeshTokenReceiveTime dateByAddingTimeInterval:[expireTimeInterval doubleValue]];
    if ([currentDateTime compare:newDate]== NSOrderedAscending) {
        // Not Expired
        return YES;
    }
    return NO;
    
    
}


-(BOOL)isValidAccessToken {
    NSNumber *expireTimeInterval = [userDefaults valueForKey:kDefaultsAccessTokenExpiresIn];
    NSDate *accessTokenReceiveTime = [userDefaults valueForKey:kDefaultsAccessTokenReceivedTime];
    
    NSDate *currentDateTime = [NSDate date];
    NSDate *newDate = [accessTokenReceiveTime dateByAddingTimeInterval:[expireTimeInterval doubleValue]];
    if ([currentDateTime compare:newDate]== NSOrderedAscending) {
        // Not Expired
        return NO;
    }
    return NO;
    

}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}


- (IBAction)continueClicked:(id)sender {
    
    if ([self isValidRefreshToken]) {
        if ([self isValidAccessToken]) {
            
            UIStoryboard *mainStoryboard = UISTORYBOARD;
            MSAPlanViewContoller *controller = (MSAPlanViewContoller*)[mainStoryboard
                                                                       instantiateViewControllerWithIdentifier: @"PlanViewContoller"];
            [self.navigationController pushViewController:controller animated:YES];

        }
        else {
            // get access token first
            NSString *urlString = [NSString stringWithFormat:@"%@?client_id=%@&client_secret=%@&grant_type=%@&refresh_token=%@",[NSString stringWithFormat:@"%@%@",BASE_URL,REFRESHTOKENLOGINURL],kLoginServiceClientID,kLoginServiceClientSecret,kLoginServiceGrantType,[userDefaults valueForKey:kDefaultsRefreshToken]];
            MSANetworkHandler *networkHanlder = [[MSANetworkHandler alloc] init];
            networkHanlder.delegate = self;
            [networkHanlder createRequestForURLString:urlString withIdentifier:@"AccessToken" andRequestParameters:nil inView:self.view];
            
        }
        
    }
    else {
        // open login page
    }
    
   }

#pragma mark - MSANetworkDelegate

- (void)didReceiveData:(NSData *)responseData forRequest:(NSString *)requestId
{
    //received response comes here
    NSError* err;
    NSDictionary *responseDict = [NSJSONSerialization JSONObjectWithData:responseData options:0 error:&err];
    
    NSLog(@"%@",responseDict);
    
    
    
}

- (void)didFailWithError:(NSError *)error forRequest:(NSString *)requestId
{
    
    
    
    
}




@end
