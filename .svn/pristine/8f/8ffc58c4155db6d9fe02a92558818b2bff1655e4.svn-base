//
//  MSAPersonalViewController.m
//  MySchapp
//
//  Created by CK-Dev on 25/03/16.
//  Copyright Â© 2016 ACA. All rights reserved.
//

#import "MSAPersonalViewController.h"
#import "MSAConstants.h"
#import "MSANetworkHandler.h"
#import "MSALoginDecision.h"
#import "MSASecurityViewController.h"
#import "MSAUtils.h"
#import "MSALanguageTableViewController.h"
#import "MSAEducationViewController.h"

@interface MSAPersonalViewController ()<LoginDecisionDelegate,MSANetworkDelegate,ProfileLanguageDoneCancelDelegate,ProfileEducationDoneCancelDelegate>
{
    NSMutableDictionary *personalDetails;
    UIImageView *profileImage;
    UITextField *firstNameTxt;
    UITextField *lastNameTxt;
    
    UIView *companyRegView;
    UILabel *regForCompanyLbl;
    UISwitch *compRegSwitch;
    UITextField *companyNameTxt;
    UITextField *taxIDTxt;
    UITextField *dunsNumberTxt;
    NSLayoutConstraint *companyRegViewHeight;
    
    UITextField *workExpTxt;
    UITextField *addressLine1Txt;
    UITextField *addressLine2Txt;
    UITextField *cityTxt;
    UITextField *stateTxt;
    UITextField *zipTxt;
    UITextField *countryPickerTxt;
    UITextField *emailTxt;
    UITextField *genderPickerTxt;
    UILabel *genderLbl;
    UITextField *mobileTxt;
    UITextField *dobTxt;
    UITextField *currencyTxt;
    UILabel *languagesLbl;
    UILabel *educationLbl;
    UILabel *languagesCountLbl;
    UILabel *educationCountLbl;
    UIImageView *languageAccessoryView;
    UIImageView *educationAccessoryView;
    UIView *languageView;
    UIView *educationView;
    UITapGestureRecognizer *languageTap;
    UITapGestureRecognizer *educationTap;
    CGFloat heightScrollView;
    
}
@property (weak, nonatomic) IBOutlet UILabel *welcomeUserLbl;
@property (weak, nonatomic) IBOutlet UIImageView *personalImageView;
@property (weak, nonatomic) IBOutlet UILabel *selectedPlanLbl;
@property (weak, nonatomic) IBOutlet UIScrollView *scrollView;
@property (weak, nonatomic) IBOutlet UIButton *skipContinueBtn;
@property (weak, nonatomic) IBOutlet UIButton *continueBtn;

- (IBAction)skipProfile:(id)sender;
- (IBAction)openSecurityScreen:(id)sender;
@end

@implementation MSAPersonalViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view.
    
    NSString *urlString = [NSString stringWithFormat:@"%@",[NSString stringWithFormat:@"%@%@",BASEURL,PERSONALURL]];
    MSANetworkHandler *networkHanlder = [[MSANetworkHandler alloc] init];
    networkHanlder.delegate = self;
    NSDictionary *reqHeadDict = @{@"Authorization":[NSString stringWithFormat:@"bearer %@",[[NSUserDefaults standardUserDefaults] valueForKey:kAccessToken]]};
    [networkHanlder createRequestForURLString:urlString withIdentifier:@"Personal" requestHeaders:reqHeadDict andRequestParameters:@{@"countrycodeid":self.selectedCountryId,@"planid":self.selectedPlanId} inView:self.view];
   
    // Create UI
    [self createUI];
}

-(void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    self.navigationController.navigationBarHidden = NO;
    self.navigationItem.title = @"Profile";
    [self.scrollView setContentSize:CGSizeMake(self.scrollView.contentSize.width, heightScrollView)];


}

// Create UI
- (void)createUI {
    
    profileImage = [[UIImageView alloc]initWithFrame:CGRectZero];
    profileImage.translatesAutoresizingMaskIntoConstraints = NO;
    profileImage.backgroundColor = [UIColor redColor];
    [self.scrollView addSubview:profileImage];
    
    
    firstNameTxt = [[UITextField alloc]initWithFrame:CGRectZero];
    firstNameTxt.translatesAutoresizingMaskIntoConstraints = NO;
    firstNameTxt.placeholder = @"First Name";
    firstNameTxt.borderStyle = UITextBorderStyleRoundedRect;
    [self.scrollView addSubview:firstNameTxt];
    
    lastNameTxt = [[UITextField alloc]initWithFrame:CGRectZero];
    lastNameTxt.translatesAutoresizingMaskIntoConstraints = NO;
    lastNameTxt.placeholder = @"Last Name";
    lastNameTxt.borderStyle = UITextBorderStyleRoundedRect;
    [self.scrollView addSubview:lastNameTxt];
    
    companyRegView = [[UIView alloc]initWithFrame:CGRectZero];
    companyRegView.translatesAutoresizingMaskIntoConstraints = NO;
    companyRegView.layer.borderWidth = 0.5;
    companyRegView.layer.borderColor = [UIColor lightGrayColor].CGColor;
    [self.scrollView addSubview:companyRegView];
    
    regForCompanyLbl = [[UILabel alloc]initWithFrame:CGRectZero];
    regForCompanyLbl.translatesAutoresizingMaskIntoConstraints = NO;
    regForCompanyLbl.text = @"Register for Company";
    [companyRegView addSubview:regForCompanyLbl];
    
    compRegSwitch = [[UISwitch alloc]initWithFrame:CGRectZero];
    [compRegSwitch setOn: YES];
    compRegSwitch.translatesAutoresizingMaskIntoConstraints = NO;
    [compRegSwitch addTarget:self action:@selector(setState:) forControlEvents:UIControlEventValueChanged];
    [companyRegView addSubview:compRegSwitch];
    
    companyNameTxt = [[UITextField alloc]initWithFrame:CGRectZero];
    companyNameTxt.translatesAutoresizingMaskIntoConstraints = NO;
    companyNameTxt.placeholder = @"Company Name";
    companyNameTxt.borderStyle = UITextBorderStyleRoundedRect;
    [companyRegView addSubview:companyNameTxt];
    
    taxIDTxt = [[UITextField alloc]initWithFrame:CGRectZero];
    taxIDTxt.translatesAutoresizingMaskIntoConstraints = NO;
    taxIDTxt.placeholder = @"Tax ID";
    taxIDTxt.borderStyle = UITextBorderStyleRoundedRect;
    [companyRegView addSubview:taxIDTxt];
    
    dunsNumberTxt = [[UITextField alloc]initWithFrame:CGRectZero];
    dunsNumberTxt.translatesAutoresizingMaskIntoConstraints = NO;
    dunsNumberTxt.placeholder = @"Duns Number";
    dunsNumberTxt.borderStyle = UITextBorderStyleRoundedRect;
    [companyRegView addSubview:dunsNumberTxt];
    
    addressLine1Txt = [[UITextField alloc]initWithFrame:CGRectZero];
    addressLine1Txt.translatesAutoresizingMaskIntoConstraints = NO;
    addressLine1Txt.placeholder = @"Address Line1";
    addressLine1Txt.borderStyle = UITextBorderStyleRoundedRect;
    [self.scrollView addSubview:addressLine1Txt];
    
    addressLine2Txt = [[UITextField alloc]initWithFrame:CGRectZero];
    addressLine2Txt.translatesAutoresizingMaskIntoConstraints = NO;
    addressLine2Txt.placeholder = @"Address Line2";
    addressLine2Txt.borderStyle = UITextBorderStyleRoundedRect;
    [self.scrollView addSubview:addressLine2Txt];
    
    cityTxt = [[UITextField alloc]initWithFrame:CGRectZero];
    cityTxt.translatesAutoresizingMaskIntoConstraints = NO;
    cityTxt.placeholder = @"City";
    cityTxt.borderStyle = UITextBorderStyleRoundedRect;
    [self.scrollView addSubview:cityTxt];
    
    stateTxt = [[UITextField alloc]initWithFrame:CGRectZero];
    stateTxt.translatesAutoresizingMaskIntoConstraints = NO;
    stateTxt.placeholder = @"State";
    stateTxt.borderStyle = UITextBorderStyleRoundedRect;
    [self.scrollView addSubview:stateTxt];
    
    zipTxt = [[UITextField alloc]initWithFrame:CGRectZero];
    zipTxt.translatesAutoresizingMaskIntoConstraints = NO;
    zipTxt.placeholder = @"Zip";
    zipTxt.borderStyle = UITextBorderStyleRoundedRect;
    [self.scrollView addSubview:zipTxt];
    
    countryPickerTxt = [[UITextField alloc]initWithFrame:CGRectZero];
    countryPickerTxt.translatesAutoresizingMaskIntoConstraints = NO;
    countryPickerTxt.placeholder = @"Country";
    countryPickerTxt.borderStyle = UITextBorderStyleRoundedRect;
    [countryPickerTxt setEnabled:NO];
    [self.scrollView addSubview:countryPickerTxt];
    
    emailTxt = [[UITextField alloc]initWithFrame:CGRectZero];
    emailTxt.translatesAutoresizingMaskIntoConstraints = NO;
    emailTxt.placeholder = @"Email";
    emailTxt.borderStyle = UITextBorderStyleRoundedRect;
    [emailTxt setEnabled:NO];
    [self.scrollView addSubview:emailTxt];
    
    genderPickerTxt = [[UITextField alloc]initWithFrame:CGRectZero];
    genderPickerTxt.translatesAutoresizingMaskIntoConstraints = NO;
    genderPickerTxt.placeholder = @"Select";
    genderPickerTxt.borderStyle = UITextBorderStyleRoundedRect;
    genderPickerTxt.textAlignment = NSTextAlignmentLeft;
    [self.scrollView addSubview:genderPickerTxt];
    
    genderLbl = [[UILabel alloc]initWithFrame:CGRectZero];
    genderLbl.translatesAutoresizingMaskIntoConstraints = NO;
    genderLbl.text = @"Gender";
    [self.scrollView addSubview:genderLbl];
    
    mobileTxt = [[UITextField alloc]initWithFrame:CGRectZero];
    mobileTxt.translatesAutoresizingMaskIntoConstraints = NO;
    mobileTxt.placeholder = @"Mobile";
    mobileTxt.borderStyle = UITextBorderStyleRoundedRect;
    [self.scrollView addSubview:mobileTxt];
    
    dobTxt = [[UITextField alloc]initWithFrame:CGRectZero];
    dobTxt.translatesAutoresizingMaskIntoConstraints = NO;
    dobTxt.borderStyle = UITextBorderStyleRoundedRect;
    dobTxt.placeholder = @"DOB";
    [self.scrollView addSubview:dobTxt];
    
    currencyTxt = [[UITextField alloc]initWithFrame:CGRectZero];
    currencyTxt.translatesAutoresizingMaskIntoConstraints = NO;
    currencyTxt.placeholder = @"Currency";
    currencyTxt.borderStyle = UITextBorderStyleRoundedRect;
    [self.scrollView addSubview:currencyTxt];
    
    workExpTxt = [[UITextField alloc]initWithFrame:CGRectZero];
    workExpTxt.translatesAutoresizingMaskIntoConstraints = NO;
    workExpTxt.placeholder = @"Work Experience (in Months)";
    workExpTxt.borderStyle = UITextBorderStyleRoundedRect;
    [self.scrollView addSubview:workExpTxt];

    
    // language View
    languageView = [[UIView alloc]initWithFrame:CGRectZero];
    languageView.translatesAutoresizingMaskIntoConstraints = NO;
    languageView.layer.borderWidth = 0.5;
    languageView.layer.cornerRadius = 5;
    languageView.layer.borderColor = [UIColor lightGrayColor].CGColor;
    languageView.backgroundColor = [UIColor lightGrayColor];
    [self.scrollView addSubview:languageView];
    
    languagesLbl = [[UILabel alloc]initWithFrame:CGRectZero];
    languagesLbl.translatesAutoresizingMaskIntoConstraints = NO;
    languagesLbl.text = @"Languages";
    [languageView addSubview:languagesLbl];
    
    languagesCountLbl = [[UILabel alloc]initWithFrame:CGRectZero];
    languagesCountLbl.translatesAutoresizingMaskIntoConstraints = NO;
    languagesCountLbl.textAlignment = NSTextAlignmentRight;
    [languageView addSubview:languagesCountLbl];
    
    languageAccessoryView = [[UIImageView alloc]initWithFrame:CGRectZero];
    languageAccessoryView.translatesAutoresizingMaskIntoConstraints = NO;
    languageAccessoryView.backgroundColor = [UIColor redColor];
    [languageView addSubview:languageAccessoryView];

    
    educationView = [[UIView alloc]initWithFrame:CGRectZero];
    educationView.translatesAutoresizingMaskIntoConstraints = NO;
    educationView.layer.borderWidth = 0.5;
    educationView.layer.cornerRadius = 5;
    educationView.layer.borderColor = [UIColor lightGrayColor].CGColor;
    educationView.backgroundColor = [UIColor lightGrayColor];
    [self.scrollView addSubview:educationView];
    
    
    educationLbl =  [[UILabel alloc]initWithFrame:CGRectZero];
    educationLbl.translatesAutoresizingMaskIntoConstraints = NO;
    educationLbl.text = @"Educations";
    [educationView addSubview:educationLbl];
    
    educationCountLbl = [[UILabel alloc]initWithFrame:CGRectZero];
    educationCountLbl.translatesAutoresizingMaskIntoConstraints = NO;
    educationCountLbl.textAlignment = NSTextAlignmentRight;
    [educationView addSubview:educationCountLbl];
    
    educationAccessoryView = [[UIImageView alloc]initWithFrame:CGRectZero];
    educationAccessoryView.translatesAutoresizingMaskIntoConstraints = NO;
    educationAccessoryView.backgroundColor = [UIColor redColor];
    [educationView addSubview:educationAccessoryView];
    
    languageTap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(languageViewTapped:)];
    [languageView addGestureRecognizer:languageTap];
    
    educationTap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(educationViewTapped:)];
    [educationView addGestureRecognizer:educationTap];
    
    
    [self applyConstraints];
}

// Apply constraints
- (void)applyConstraints {
    
    NSDictionary *views = @{@"firstNameTxt":firstNameTxt,@"lastNameTxt":lastNameTxt,@"companyRegView":companyRegView,@"addressLine1Txt":addressLine1Txt,@"addressLine2Txt":addressLine2Txt,@"zipTxt":zipTxt,@"cityTxt":cityTxt,@"stateTxt":stateTxt,@"countryPickerTxt":countryPickerTxt,@"emailTxt":emailTxt,@"genderLbl":genderLbl,@"mobileTxt":mobileTxt,@"dobTxt":dobTxt,@"currencyTxt":currencyTxt,@"languageView":languageView,@"educationView":educationView,@"profileImage":profileImage,@"workExpTxt":workExpTxt};
    
    [self.scrollView addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@"V:|-[firstNameTxt(45)]-10-[lastNameTxt(45)]-10-[companyRegView]-10-[addressLine1Txt(45)]-10-[addressLine2Txt(45)]-10-[zipTxt(45)]-10-[cityTxt(45)]-10-[stateTxt(45)]-10-[countryPickerTxt(45)]-10-[emailTxt(45)]-10-[genderLbl(45)]-10-[mobileTxt(45)]-10-[dobTxt(45)]-10-[currencyTxt(45)]-10-[workExpTxt(45)]-10-[languageView(45)]-10-[educationView(45)]-10-|" options:0 metrics:nil views:views]];
    
    // profileImage
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:profileImage attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1 constant:80]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:profileImage attribute:NSLayoutAttributeLeading relatedBy:NSLayoutRelationEqual toItem:addressLine1Txt attribute:NSLayoutAttributeLeading multiplier:1 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:profileImage attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEqual toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1 constant:90]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:profileImage attribute:NSLayoutAttributeTop relatedBy:NSLayoutRelationEqual toItem:firstNameTxt attribute:NSLayoutAttributeTop multiplier:1 constant:5]];
    
    // First Name
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:firstNameTxt attribute:NSLayoutAttributeTrailing relatedBy:NSLayoutRelationEqual toItem:addressLine1Txt attribute:NSLayoutAttributeTrailing multiplier:1 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:firstNameTxt attribute:NSLayoutAttributeLeading relatedBy:NSLayoutRelationEqual toItem:profileImage attribute:NSLayoutAttributeTrailing multiplier:1 constant:10]];

    // Last Name
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:lastNameTxt attribute:NSLayoutAttributeTrailing relatedBy:NSLayoutRelationEqual toItem:addressLine1Txt attribute:NSLayoutAttributeTrailing multiplier:1 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:lastNameTxt attribute:NSLayoutAttributeLeading relatedBy:NSLayoutRelationEqual toItem:profileImage attribute:NSLayoutAttributeTrailing multiplier:1 constant:10]];
    
    
    // CompanyRegView
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:companyRegView attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeWidth multiplier:1 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:companyRegView attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeCenterX multiplier:1 constant:0]];
    companyRegViewHeight = [NSLayoutConstraint constraintWithItem:companyRegView attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEqual toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1 constant:225];
    [self.scrollView addConstraint:companyRegViewHeight];
    
    NSDictionary *compRegViews = @{@"companyNameTxt":companyNameTxt,@"taxIDTxt":taxIDTxt,@"dunsNumberTxt":dunsNumberTxt,@"regForCompanyLbl":regForCompanyLbl,@"compRegSwitch":compRegSwitch};
    [companyRegView addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@"V:|-[regForCompanyLbl(45)]-10-[companyNameTxt(45)]-10-[taxIDTxt(45)]-[dunsNumberTxt(45)]" options:0 metrics:nil views:compRegViews]];

    // regForCompanyLbl
    [companyRegView addConstraint:[NSLayoutConstraint constraintWithItem:regForCompanyLbl attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:companyRegView attribute:NSLayoutAttributeWidth multiplier:0.50 constant:0]];
    [companyRegView addConstraint:[NSLayoutConstraint constraintWithItem:regForCompanyLbl attribute:NSLayoutAttributeLeading relatedBy:NSLayoutRelationEqual toItem:companyNameTxt attribute:NSLayoutAttributeLeading multiplier:1.0 constant:0]];
    
    
    // compRegSwitch
    [companyRegView addConstraint:[NSLayoutConstraint constraintWithItem:compRegSwitch attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:companyRegView attribute:NSLayoutAttributeWidth multiplier:0.20 constant:0]];
    [companyRegView addConstraint:[NSLayoutConstraint constraintWithItem:compRegSwitch attribute:NSLayoutAttributeTrailing relatedBy:NSLayoutRelationEqual toItem:companyNameTxt attribute:NSLayoutAttributeTrailing multiplier:1.0 constant:0]];
    [companyRegView addConstraint:[NSLayoutConstraint constraintWithItem:compRegSwitch attribute:NSLayoutAttributeCenterY relatedBy:NSLayoutRelationEqual toItem:regForCompanyLbl attribute:NSLayoutAttributeCenterY multiplier:1.0 constant:0]];
    
    // companyNameTxt
    [companyRegView addConstraint:[NSLayoutConstraint constraintWithItem:companyNameTxt attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:companyRegView attribute:NSLayoutAttributeWidth multiplier:0.90 constant:0]];
    [companyRegView addConstraint:[NSLayoutConstraint constraintWithItem:companyNameTxt attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:companyRegView attribute:NSLayoutAttributeCenterX multiplier:1 constant:0]];
    
    // taxIdTxt
    [companyRegView addConstraint:[NSLayoutConstraint constraintWithItem:taxIDTxt attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:companyRegView attribute:NSLayoutAttributeWidth multiplier:0.90 constant:0]];
    [companyRegView addConstraint:[NSLayoutConstraint constraintWithItem:taxIDTxt attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:companyRegView attribute:NSLayoutAttributeCenterX multiplier:1 constant:0]];
    
    // DunsNumberTxt
    [companyRegView addConstraint:[NSLayoutConstraint constraintWithItem:dunsNumberTxt attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:companyRegView attribute:NSLayoutAttributeWidth multiplier:0.90 constant:0]];
    [companyRegView addConstraint:[NSLayoutConstraint constraintWithItem:dunsNumberTxt attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:companyRegView attribute:NSLayoutAttributeCenterX multiplier:1 constant:0]];
    
    // addressLine1Txt
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:addressLine1Txt attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeWidth multiplier:0.90 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:addressLine1Txt attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeCenterX multiplier:1 constant:0]];
    
    // addressLine2Txt
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:addressLine2Txt attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeWidth multiplier:0.90 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:addressLine2Txt attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeCenterX multiplier:1 constant:0]];
    
    // zip
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:zipTxt attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeWidth multiplier:0.90 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:zipTxt attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeCenterX multiplier:1 constant:0]];

    // cityTxt
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:cityTxt attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeWidth multiplier:0.90 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:cityTxt attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeCenterX multiplier:1 constant:0]];

    // State
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:stateTxt attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeWidth multiplier:0.90 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:stateTxt attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeCenterX multiplier:1 constant:0]];
    
    // Country
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:countryPickerTxt attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeWidth multiplier:0.90 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:countryPickerTxt attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeCenterX multiplier:1 constant:0]];
    
    // email
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:emailTxt attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeWidth multiplier:0.90 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:emailTxt attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeCenterX multiplier:1 constant:0]];
    
    // genderLbl
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:genderLbl attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeWidth multiplier:0.40 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:genderLbl attribute:NSLayoutAttributeLeading relatedBy:NSLayoutRelationEqual toItem:emailTxt attribute:NSLayoutAttributeLeading multiplier:1.0 constant:0]];
    
    // genderTxt
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:genderPickerTxt attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeWidth multiplier:0.40 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:genderPickerTxt attribute:NSLayoutAttributeTrailing relatedBy:NSLayoutRelationEqual toItem:zipTxt attribute:NSLayoutAttributeTrailing multiplier:1.0 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:genderPickerTxt attribute:NSLayoutAttributeTop relatedBy:NSLayoutRelationEqual toItem:genderLbl attribute:NSLayoutAttributeTop multiplier:1.0 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:genderPickerTxt attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEqual toItem:genderLbl attribute:NSLayoutAttributeHeight multiplier:1.0 constant:0]];
    
    // Mobile Text
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:mobileTxt attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeWidth multiplier:0.90 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:mobileTxt attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeCenterX multiplier:1 constant:0]];
    
    // DOB
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:dobTxt attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeWidth multiplier:0.90 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:dobTxt attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeCenterX multiplier:1 constant:0]];
    
    // Currency
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:currencyTxt attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeWidth multiplier:0.90 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:currencyTxt attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeCenterX multiplier:1 constant:0]];
    
    // workExpTxt
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:workExpTxt attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeWidth multiplier:0.90 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:workExpTxt attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeCenterX multiplier:1 constant:0]];
    
    
    
    //language view
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:languageView attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeWidth multiplier:0.90 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:languageView attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeCenterX multiplier:1 constant:0]];
    
    NSDictionary *languageViews = @{@"languagesCountLbl":languagesCountLbl,@"languagesLbl":languagesLbl,@"languageAccessoryView":languageAccessoryView};
    [languageView addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@"V:|[languagesLbl]|" options:0 metrics:nil views:languageViews]];
    [languageView addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@"H:|-10-[languagesLbl]" options:0 metrics:nil views:languageViews]];
    [languageView addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@"H:[languagesCountLbl]-10-[languageAccessoryView(20)]-|" options:0 metrics:nil views:languageViews]];
    
    // lang Lbl
    [languageView addConstraint:[NSLayoutConstraint constraintWithItem:languagesLbl attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:languageView attribute:NSLayoutAttributeWidth multiplier:0.30 constant:0]];
    

    // Language Text
    [languageView addConstraint:[NSLayoutConstraint constraintWithItem:languagesCountLbl attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:languageView attribute:NSLayoutAttributeWidth multiplier:0.40 constant:0]];
    
    [languageView addConstraint:[NSLayoutConstraint constraintWithItem:languagesCountLbl attribute:NSLayoutAttributeTop relatedBy:NSLayoutRelationEqual toItem:languagesLbl attribute:NSLayoutAttributeTop multiplier:1.0 constant:0]];
    [languageView addConstraint:[NSLayoutConstraint constraintWithItem:languagesCountLbl attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEqual toItem:languagesLbl attribute:NSLayoutAttributeHeight multiplier:1.0 constant:0]];
    
    
    // add cert Button
    [languageView addConstraint:[NSLayoutConstraint constraintWithItem:languageAccessoryView attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEqual toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:20]];
    [languageView addConstraint:[NSLayoutConstraint constraintWithItem:languageAccessoryView attribute:NSLayoutAttributeCenterY relatedBy:NSLayoutRelationEqual toItem:languagesCountLbl attribute:NSLayoutAttributeCenterY multiplier:1.0 constant:0]];
    
    
    //education view
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:educationView attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeWidth multiplier:0.90 constant:0]];
    [self.scrollView addConstraint:[NSLayoutConstraint constraintWithItem:educationView attribute:NSLayoutAttributeCenterX relatedBy:NSLayoutRelationEqual toItem:self.scrollView attribute:NSLayoutAttributeCenterX multiplier:1 constant:0]];
    
    NSDictionary *educationViews = @{@"educationCountLbl":educationCountLbl,@"educationLbl":educationLbl,@"educationAccessoryView":educationAccessoryView};
    [educationView addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@"V:|[educationLbl]|" options:0 metrics:nil views:educationViews]];
    [educationView addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@"H:|-10-[educationLbl]" options:0 metrics:nil views:educationViews]];
    [educationView addConstraints:[NSLayoutConstraint constraintsWithVisualFormat:@"H:[educationCountLbl]-10-[educationAccessoryView(20)]-|" options:0 metrics:nil views:educationViews]];

    
    // Cert Lbl
    [educationView addConstraint:[NSLayoutConstraint constraintWithItem:educationLbl attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:educationView attribute:NSLayoutAttributeWidth multiplier:0.30 constant:0]];
    
    // Cert Text
    [educationView addConstraint:[NSLayoutConstraint constraintWithItem:educationCountLbl attribute:NSLayoutAttributeWidth relatedBy:NSLayoutRelationEqual toItem:educationView attribute:NSLayoutAttributeWidth multiplier:0.40 constant:0]];
    [educationView addConstraint:[NSLayoutConstraint constraintWithItem:educationCountLbl attribute:NSLayoutAttributeTop relatedBy:NSLayoutRelationEqual toItem:educationLbl attribute:NSLayoutAttributeTop multiplier:1.0 constant:0]];
    [educationView addConstraint:[NSLayoutConstraint constraintWithItem:educationCountLbl attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEqual toItem:educationLbl attribute:NSLayoutAttributeHeight multiplier:1.0 constant:0]];
    
    // add education Button
    [educationView addConstraint:[NSLayoutConstraint constraintWithItem:educationAccessoryView attribute:NSLayoutAttributeHeight relatedBy:NSLayoutRelationEqual toItem:nil attribute:NSLayoutAttributeNotAnAttribute multiplier:1.0 constant:20]];
    [educationView addConstraint:[NSLayoutConstraint constraintWithItem:educationAccessoryView attribute:NSLayoutAttributeCenterY relatedBy:NSLayoutRelationEqual toItem:educationCountLbl attribute:NSLayoutAttributeCenterY multiplier:1.0 constant:0]];
    
}

- (void)autoFillData {
    
    firstNameTxt.text = [MSAUtils convertNullToEmptyString:[personalDetails objectForKey:kProfileFname]];
    lastNameTxt.text = [MSAUtils convertNullToEmptyString:[personalDetails objectForKey:kProfileLname]];
    
    companyNameTxt.text = [MSAUtils convertNullToEmptyString:[personalDetails objectForKey:kProfileCname]];
    taxIDTxt.text = [MSAUtils convertNullToEmptyString:[personalDetails objectForKey:kProfileTaxid]];
    dunsNumberTxt.text = [MSAUtils convertNullToEmptyString:[personalDetails objectForKey:kProfileDuns]];
    
    addressLine1Txt.text = [MSAUtils convertNullToEmptyString:[personalDetails objectForKey:kProfileAddress1]];
    addressLine2Txt.text = [MSAUtils convertNullToEmptyString:[personalDetails objectForKey:kProfileAddress2]];
    zipTxt.text = [MSAUtils convertNullToEmptyString:[personalDetails objectForKey:kProfileZip]];
    cityTxt.text = [MSAUtils convertNullToEmptyString:[personalDetails objectForKey:kProfileCity]];
    stateTxt.text = [MSAUtils convertNullToEmptyString:[personalDetails objectForKey:kProfileState]];
    countryPickerTxt.text = [MSAUtils convertNullToEmptyString:[personalDetails objectForKey:kProfileCountry]];
    if ([countryPickerTxt.text isEqualToString:@""]) {
        countryPickerTxt.text = self.selectedCountryName;
    }
    
    emailTxt.text = [MSAUtils convertNullToEmptyString:[personalDetails objectForKey:kProfileEmail]];
    genderPickerTxt.text = [MSAUtils convertNullToEmptyString:[personalDetails objectForKey:kProfileGender]];
    mobileTxt.text = [MSAUtils convertNullToEmptyString:[personalDetails objectForKey:kProfileMobile]];
    dobTxt.text = [MSAUtils convertNullToEmptyString:[personalDetails objectForKey:kProfileDob]];
    currencyTxt.text = [MSAUtils convertNullToEmptyString:[personalDetails objectForKey:kProfileSelectedCurrency]];
    
    long workEx = [[MSAUtils convertNullToEmptyString:[personalDetails objectForKey:kProfileWorkExperience]] integerValue];
    workExpTxt.text = [NSString stringWithFormat:@"%ld",workEx];
    
    
    if ([[personalDetails objectForKey:kProfileSelectedLanguages] isKindOfClass:[NSNull class]]) {
        languagesCountLbl.text = @"0";
    }
    else {
        NSArray *languageArray = [personalDetails objectForKey:kProfileSelectedLanguages];
        languagesCountLbl.text = [NSString stringWithFormat:@"%ld",[languageArray count]];
    }
    
    if ([[personalDetails objectForKey:kProfileListofCert] isKindOfClass:[NSNull class]]) {
        educationCountLbl.text = @"0";
    }
    else {
        NSArray * educationArray = [personalDetails objectForKey:kProfileListofCert];
        educationCountLbl.text = [NSString stringWithFormat:@"%ld",[educationArray count]];
    }
    
    
}

- (void)getFilledData {
    [personalDetails setObject:firstNameTxt.text forKey:kProfileFname];
    [personalDetails setObject:lastNameTxt.text forKey:kProfileLname];
    
    [personalDetails setObject:companyNameTxt.text forKey:kProfileCname];
    [personalDetails setObject:taxIDTxt.text forKey:kProfileTaxid];
    [personalDetails setObject:dunsNumberTxt.text forKey:kProfileDuns];
    
    [personalDetails setObject:addressLine1Txt.text forKey:kProfileAddress1];
    [personalDetails setObject:addressLine2Txt.text forKey:kProfileAddress2];
    [personalDetails setObject:zipTxt.text forKey:kProfileZip];
    [personalDetails setObject:cityTxt.text forKey:kProfileCity];
    [personalDetails setObject:stateTxt.text forKey:kProfileState];
    [personalDetails setObject:countryPickerTxt.text forKey:kProfileCountry];
    [personalDetails setObject:emailTxt.text forKey:kProfileEmail];
    [personalDetails setObject:genderPickerTxt.text forKey:kProfileGender];
    [personalDetails setObject:@"M" forKey:kProfileGender];
    
    [personalDetails setObject:mobileTxt.text forKey:kProfileMobile];
    [personalDetails setObject:dobTxt.text forKey:kProfileDob];
    [personalDetails setObject:currencyTxt.text forKey:kProfileSelectedCurrency];
    [personalDetails setObject:workExpTxt.text forKey:kProfileWorkExperience];
    
    if ([languagesCountLbl.text isEqualToString:@"0"])
        [personalDetails setObject:@[] forKey:kProfileSelectedLanguages];
    
    if ([educationCountLbl.text isEqualToString:@"0"])
        [personalDetails setObject:@[] forKey:kProfileListofCert];

    
}
/*
- (NSString *)stringFromArray:(NSArray *)list {
    NSString *concatString;
    for (NSInteger i = 0; i<list.count; i++) {
        concatString = [concatString stringByAppendingString:[list objectAtIndex:i]];
    }
    return concatString;
}

- (id)arrayFromString:(NSString *)list {
    NSArray *stringArray;
    stringArray = [list componentsSeparatedByString:@","];
   
    return stringArray;
}

- (NSArray *)arrayFromArray:(NSArray *)list {
    NSMutableArray *tempArr = [[NSMutableArray alloc]init];
    
    for (NSInteger i = 0; i<list.count; i++) {
        [tempArr addObject:[list objectAtIndex:i]];
    }
    return tempArr;
}
*/
#pragma mark - MSANetworkDelegate

- (void)didReceiveData:(NSData *)responseData forRequest:(NSString *)requestId
{
    //received response comes here
    NSError* err;
    NSDictionary *responseDict = [NSJSONSerialization JSONObjectWithData:responseData options:0 error:&err];
    
    NSLog(@"%@",responseDict);
    if([[responseDict valueForKey:@"rCode"] isEqualToString:@"00"]) {
        NSLog(@"Got Personal data");
        personalDetails = [NSMutableDictionary dictionaryWithDictionary:responseDict];
        
        // Autofill Data
        [self autoFillData];
    }
    else {
        [MSAUtils showAlertWithTitle:kAlertMessageTitle message:[responseDict valueForKey:@"rMsg"] cancelButton:kAlertOkButtonTitle otherButton:nil delegate:self];
    }
    
}

-(void)didFailWithError:(NSError *)error forRequest:(NSString *)requestId
{
      [MSAUtils showAlertWithTitle:kAlertMessageTitle message:kAlertInternalErrorMsg cancelButton:kAlertOkButtonTitle otherButton:nil delegate:self];
}

- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma LoginDecision Delegate
- (void)redirectToPage:(NSString *)pageToBeOpened {
    if ([pageToBeOpened isEqualToString:kLoginScreen]) {
        [self.navigationController popToRootViewControllerAnimated:NO];
        
    }
    else if ([pageToBeOpened isEqualToString:kCountrySelectionScreen])
    {
        UIStoryboard *mainStoryboard = UISTORYBOARD;
        
        MSASecurityViewController *controller = (MSASecurityViewController*)[mainStoryboard
                                                                             instantiateViewControllerWithIdentifier:@"MSASecurityViewController"];
        [personalDetails removeObjectForKey:@"rCode"];
        [personalDetails removeObjectForKey:@"rMsg"];
        [personalDetails removeObjectForKey:@"profileImage"];
        controller.personalData = personalDetails;
        [self.navigationController pushViewController:controller animated:YES];
    }
}


#pragma mark - IBAction Methods
- (IBAction)skipProfile:(id)sender {
    [self dismissViewControllerAnimated:YES completion:nil];
}

- (IBAction)openSecurityScreen:(id)sender {
    [self getFilledData];
    heightScrollView = self.scrollView.contentSize.height;
    MSALoginDecision *loginDecision = [[MSALoginDecision alloc]init];
    loginDecision.delegate = self;
    [loginDecision checkLoginCriteria];

    
}

- (void)setState:(id)sender {
    if (![sender isOn]) {
        companyRegViewHeight.constant = 55;
        companyRegView.clipsToBounds = YES;
        [companyRegView updateConstraintsIfNeeded];
    }
    else {
        companyRegViewHeight.constant = 230;
        companyRegView.clipsToBounds = YES;
        [companyRegView updateConstraintsIfNeeded];
    }
    
    
}


-(void)languageViewTapped:(id)sender {
    MSALanguageTableViewController *languageVC = [[MSALanguageTableViewController alloc]init];
    languageVC.delegate = self;
    if (![[personalDetails objectForKey:kProfileSelectedLanguages] isKindOfClass:[NSNull class]]) {
        languageVC.savedLanguagesArray = (NSArray *)[personalDetails objectForKey:kProfileSelectedLanguages];
    }
    heightScrollView = self.scrollView.contentSize.height;
    [self.navigationController pushViewController:languageVC animated:YES];
    
    
}

-(void)educationViewTapped:(id)sender {
    UIStoryboard *mainStoryboard = UISTORYBOARD;
    
    MSAEducationViewController *educationVC = (MSAEducationViewController*)[mainStoryboard
                                                                             instantiateViewControllerWithIdentifier:@"MSAEducationViewController"];
    educationVC.delegate = self;
    if (![[personalDetails objectForKey:kProfileListofCert] isKindOfClass:[NSNull class]]) {
        educationVC.savedEducationArray = (NSArray *)[personalDetails objectForKey:kProfileListofCert];
    }
    heightScrollView = self.scrollView.contentSize.height;
    [self.navigationController pushViewController:educationVC animated:YES];
}


#pragma mark - LanguageDoneCancelDelegate

-(void)languageDoneClickedWithValues:(NSArray *)newLanguages {
    
    [personalDetails setObject:newLanguages forKey:kProfileSelectedLanguages];
    languagesCountLbl.text = [NSString stringWithFormat:@"%ld",[newLanguages count]];
    
}


#pragma mark - EducationDoneCancelDelegate

-(void)educationDoneClickedWithValues:(NSArray *)newEducation {

    [personalDetails setObject:newEducation forKey:kProfileListofCert];
    educationCountLbl.text = [NSString stringWithFormat:@"%ld",[newEducation count]];
    [self.scrollView setContentSize:CGSizeMake(self.scrollView.contentSize.width, heightScrollView)];
    
}


@end
