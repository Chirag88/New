//
//  MSAUtils.m
//  MySchapp
//
//  Created by CK-Dev on 23/02/16.
//  Copyright Â© 2016 ACA. All rights reserved.
//

#import "MSAUtils.h"
#import "MSAConstants.h"

@implementation MSAUtils

+ (BOOL)validateEmail:(NSString *)email {
    NSString *emailRegex = @"[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,4}";
    NSPredicate *emailTest = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", emailRegex];
    
    return [emailTest evaluateWithObject:email];
}

+ (BOOL)validatePassword:(NSString *)password {
    NSString *pwdRegex = @"^(?=.{10,})(?=.*[0-9])(?=.*[a-zA-Z])([@#$%^&=a-zA-Z0-9_-]+)$";//@"^(?=.{2,8}$)(?=.*?[A-Za-z0-9])(?=.*?[\W_])[\w\W]+";
    
   
    
    NSPredicate *pwdTest = [NSPredicate predicateWithFormat:@"SELF MATCHES %@", pwdRegex];
    
    return [pwdTest evaluateWithObject:password];
}

+ (void)showAlertWithTitle: (NSString *) title message:(NSString *)message cancelButton:(NSString*)cancelTitle otherButton:(NSString *) buttonTitle delegate:(id) sender {
    
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:title message:message delegate:sender cancelButtonTitle:cancelTitle otherButtonTitles:buttonTitle, nil];
    
    [alert show];
}

+ (NSString *)convertNullToEmptyString:(NSString *)nullString {
    if ([nullString isKindOfClass:[NSNull class]]) {
        nullString = @"";
        return nullString;
    }
    return nullString;
    
}

+ (void)setNavigationBarAttributes:(UINavigationController*) navigationController{
    navigationController.navigationBar.barTintColor = kMySchappDarkBlueColor;
    navigationController.navigationBar.translucent = NO;
    navigationController.navigationBar.tintColor = [UIColor whiteColor];
    [navigationController.navigationBar
     setTitleTextAttributes:@{NSForegroundColorAttributeName : [UIColor whiteColor]}];
}

/*
 + (NSString *)stringFromArray:(NSArray *)list {
 NSString *concatString;
 for (NSInteger i = 0; i<list.count; i++) {
 concatString = [concatString stringByAppendingString:[list objectAtIndex:i]];
 }
 return concatString;
 }
 
 + (id)arrayFromString:(NSString *)list {
 NSArray *stringArray;
 stringArray = [list componentsSeparatedByString:@","];
 
 return stringArray;
 }
 
 + (NSArray *)arrayFromArray:(NSArray *)list {
 NSMutableArray *tempArr = [[NSMutableArray alloc]init];
 
 for (NSInteger i = 0; i<list.count; i++) {
 [tempArr addObject:[list objectAtIndex:i]];
 }
 return tempArr;
 }
 */


@end
